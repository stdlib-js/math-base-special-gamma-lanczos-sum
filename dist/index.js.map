{
  "version": 3,
  "sources": ["../lib/rational_pq.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function (i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\)).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn Infinity;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 38474670393.31777 + (x * (36857665043.51951 + (x * (15889202453.72942 + (x * (4059208354.298835 + (x * (680547661.1834733 + (x * (78239755.00312005 + (x * (6246580.776401795 + (x * (341986.3488721347 + (x * (12287.194511824551 + (x * (261.61404416416684 + (x * 2.5066282746310007))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (362880.0 + (x * (1026576.0 + (x * (1172700.0 + (x * (723680.0 + (x * (269325.0 + (x * (63273.0 + (x * (9450.0 + (x * (870.0 + (x * (45.0 + (x * 1.0))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 2.5066282746310007 + (x * (261.61404416416684 + (x * (12287.194511824551 + (x * (341986.3488721347 + (x * (6246580.776401795 + (x * (78239755.00312005 + (x * (680547661.1834733 + (x * (4059208354.298835 + (x * (15889202453.72942 + (x * (36857665043.51951 + (x * 38474670393.31777))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (45.0 + (x * (870.0 + (x * (9450.0 + (x * (63273.0 + (x * (269325.0 + (x * (723680.0 + (x * (1172700.0 + (x * (1026576.0 + (x * (362880.0 + (x * 0.0))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/lanczos.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Calculates the Lanczos sum approximation.\n*\n* @name gammaLanczosSum\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} Lanczos sum approximation\n*\n* @example\n* var v = gammaLanczosSum( 4.0 );\n* // returns ~950.366\n*\n* @example\n* var v = gammaLanczosSum( -1.5 );\n* // returns ~1373366.245\n*\n* @example\n* var v = gammaLanczosSum( -0.5 );\n* // returns ~-699841.735\n*\n* @example\n* var v = gammaLanczosSum( 0.5 );\n* // returns ~96074.186\n*\n* @example\n* var v = gammaLanczosSum( 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = gammaLanczosSum( NaN );\n* // returns NaN\n*/\nvar gammaLanczosSum = require( './rational_pq.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammaLanczosSum;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Calculate the Lanczos sum for the approximation of the gamma function.\n*\n* @module @stdlib/math-base-special-gamma-lanczos-sum\n*\n* @example\n* var gammaLanczosSum = require( '@stdlib/math-base-special-gamma-lanczos-sum' );\n*\n* var v = gammaLanczosSum( 4.0 );\n* // returns ~950.366\n*\n* v = gammaLanczosSum( -1.5 );\n* // returns ~1373366.245\n*\n* v = gammaLanczosSum( -0.5 );\n* // returns ~-699841.735\n*\n* v = gammaLanczosSum( 0.5 );\n* // returns ~96074.186\n*\n* v = gammaLanczosSum( 0.0 );\n* // returns Infinity\n*\n* v = gammaLanczosSum( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAqCA,SAASC,EAAcC,EAAI,CAC1B,IAAIC,EACAC,EACAC,EACJ,OAAKH,IAAM,EACH,KAEHA,EAAI,EACRC,EAAK,CAACD,EAENC,EAAKD,EAEDC,GAAM,GACVC,EAAK,oBAAqBF,GAAK,oBAAqBA,GAAK,oBAAqBA,GAAK,oBAAqBA,GAAK,oBAAqBA,GAAK,oBAAqBA,GAAK,oBAAqBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,mBAAsBA,EAAI,4BAC1QG,EAAK,EAAOH,GAAK,OAAYA,GAAK,QAAaA,GAAK,QAAaA,GAAK,OAAYA,GAAK,OAAYA,GAAK,MAAWA,GAAK,KAAUA,GAAK,IAASA,GAAK,GAAQA,EAAI,aAEjKA,EAAI,EAAMA,EACVE,EAAK,mBAAsBF,GAAK,mBAAsBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,oBAAqBA,GAAK,oBAAqBA,GAAK,oBAAqBA,GAAK,oBAAqBA,GAAK,oBAAqBA,GAAK,oBAAqBA,EAAI,6BAC3QG,EAAK,EAAOH,GAAK,GAAQA,GAAK,IAASA,GAAK,KAAUA,GAAK,MAAWA,GAAK,OAAYA,GAAK,OAAYA,GAAK,QAAaA,GAAK,QAAaA,GAAK,OAAYA,EAAI,YAE3JE,EAAKC,EACb,CAKAL,EAAO,QAAUC,IC/DjB,IAAAK,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAmEA,IAAIC,EAAkB,IAKtBD,EAAO,QAAUC,ICvBjB,IAAIC,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_rational_pq", "__commonJSMin", "exports", "module", "evalrational", "x", "ax", "s1", "s2", "require_main", "__commonJSMin", "exports", "module", "gammaLanczosSum", "main"]
}
